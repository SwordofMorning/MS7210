PROJECT(MS7210)

CMAKE_MINIMUM_REQUIRED(VERSION 3.5)

# ===== Setp 1 : Set Cross Compiler Path =====

SET(CMAKE_C_COMPILER aarch64-none-linux-gnu-gcc)
SET(CMAKE_CXX_COMPILER aarch64-none-linux-gnu-c++)

# ===== Setp 2 : Set Flags =====

SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -s -O3 -lrt -pthread")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -s -O3 -lrt -pthread -std=c++17")

# ===== Setp 3 : Set Application Name =====

SET(APP_NAME "ms7210")

# ===== Setp 4 : Add Subdirectory =====

ADD_SUBDIRECTORY(src bin)

# ===== Step 5: Generate Version Info =====

# Branch
EXECUTE_PROCESS(
    COMMAND git rev-parse --abbrev-ref HEAD
    WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
    OUTPUT_VARIABLE GIT_BRANCH
    OUTPUT_STRIP_TRAILING_WHITESPACE
)

# Last commit ID
EXECUTE_PROCESS(
    COMMAND git rev-parse HEAD
    WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
    OUTPUT_VARIABLE GIT_COMMIT_ID
    OUTPUT_STRIP_TRAILING_WHITESPACE
)

# User
EXECUTE_PROCESS(
    COMMAND git config user.name
    WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
    OUTPUT_VARIABLE GIT_USER
    OUTPUT_STRIP_TRAILING_WHITESPACE
)

# Git Clean
EXECUTE_PROCESS(
    COMMAND git diff-index --quiet HEAD --
    WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
    RESULT_VARIABLE GIT_DIRTY   
)
IF(GIT_DIRTY EQUAL 0)
    SET(GIT_CLEAN "Clean")
ELSE()
    SET(GIT_CLEAN "Dirty")
ENDIF()

# Host
EXECUTE_PROCESS(
    COMMAND hostname
    OUTPUT_VARIABLE COMPILE_HOST
    OUTPUT_STRIP_TRAILING_WHITESPACE
)

# User
EXECUTE_PROCESS(
    COMMAND whoami
    OUTPUT_VARIABLE COMPILE_USER
    OUTPUT_STRIP_TRAILING_WHITESPACE
)

# Time
STRING(TIMESTAMP COMPILE_TIME "%Y-%m-%d %H:%M:%S")

CONFIGURE_FILE(
    ${CMAKE_SOURCE_DIR}/others/version/version.h.in
    ${CMAKE_SOURCE_DIR}/others/version/version.h
)

INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/others/)
